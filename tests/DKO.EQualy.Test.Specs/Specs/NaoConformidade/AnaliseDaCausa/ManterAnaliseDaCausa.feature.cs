// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18408
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DKO.EQualy.Test.Specs.Specs.NaoConformidade.AnaliseDaCausa
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ManterAnaliseDeCausaFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ManterAnaliseDaCausa.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "ManterAnaliseDeCausa", "Quero cadastrar e editar uma anlise de causa raiz para uma nova não conformidade", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "ManterAnaliseDeCausa")))
            {
                DKO.EQualy.Test.Specs.Specs.NaoConformidade.AnaliseDaCausa.ManterAnaliseDeCausaFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 9
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("cadastrar uma analise de causa raiz")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ManterAnaliseDeCausa")]
        public virtual void CadastrarUmaAnaliseDeCausaRaiz()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("cadastrar uma analise de causa raiz", ((string[])(null)));
#line 13
this.ScenarioSetup(scenarioInfo);
#line 9
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "DataDeConclusao",
                        "Descrição"});
            table1.AddRow(new string[] {
                        "\"\"",
                        "true"});
#line 14
testRunner.Given("as seguintes informações iniciais para analise de causa raiz", ((string)(null)), table1, "Dado ");
#line 18
testRunner.When("salvar a nao conformidade com os dados de analise da causa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 19
testRunner.Then("eu espero receber a seguinte informação \"Não conformidade atualizada com registro" +
                    " de analise de causa raiz com sucesso!\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line 20
testRunner.And("um email de notificação para a equipe envolvida deve ser enviado com a seguinte m" +
                    "ensagem \"Definida uma causa raiz para a não conformidade código XX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("cadastrar um por que(5PorQue) para encontrar a causa raiz da nao conformidade")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ManterAnaliseDeCausa")]
        public virtual void CadastrarUmPorQue5PorQueParaEncontrarACausaRaizDaNaoConformidade()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("cadastrar um por que(5PorQue) para encontrar a causa raiz da nao conformidade", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line 9
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "UsuarioDeDestinoId",
                        "Pergunta"});
            table2.AddRow(new string[] {
                        "1",
                        "\"Qual a forma de transporte para o produto XX?\""});
#line 24
testRunner.Given("as seguintes informações da pergunta", ((string)(null)), table2, "Dado ");
#line 28
testRunner.When("adicionar o porque", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 29
testRunner.Then("adicionar o registrno na tabela", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line 30
testRunner.And("mostrar a mensagem \"Pergunta adicionada com sucesso!\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("adicionar usuarios na equipe responsavel para solução da nao conformidade")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ManterAnaliseDeCausa")]
        public virtual void AdicionarUsuariosNaEquipeResponsavelParaSolucaoDaNaoConformidade()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("adicionar usuarios na equipe responsavel para solução da nao conformidade", ((string[])(null)));
#line 33
this.ScenarioSetup(scenarioInfo);
#line 9
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "UsuarioDeDestinoId",
                        "NomeUsuario"});
            table3.AddRow(new string[] {
                        "1",
                        "\"Riguel Figueiro\""});
            table3.AddRow(new string[] {
                        "1",
                        "\"Ana Paukner\""});
#line 34
testRunner.Given("as seguintes informações da pergunta", ((string)(null)), table3, "Dado ");
#line 39
testRunner.When("adicionar o usuario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 40
testRunner.Then("adicionar o registrno na tabela de equipe selecionada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
